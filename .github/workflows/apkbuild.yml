name: Apk Build

on:
  push:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - '**.md'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'

    - name: Build with Gradle
      run: |
        bash ./gradlew build --no-daemon

    - name: Get short SHA
      run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
      
    - uses: actions/upload-artifact@v4
      with:
          name: CCTV_Viewer_${{ env.SHORT_SHA }}
          path: ./app/build/outputs/apk/debug/app-debug.apk
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 自动从GitHub获取的token
      with:
        tag_name: v1.0.${{ github.run_number }} # 使用运行号作为版本号
        release_name: Release v1.0.${{ github.run_number }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
 
    - name: Upload Release APK
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传URL从创建发布步骤获取
        asset_path: ./app/build/outputs/apk/debug/app-debug.apk # APK文件路径
        asset_name: app-debug.apk # 上传到GitHub的APK文件名
        asset_content_type: application/zip # APK文件类型，虽然这里是application/zip，实际上应该是application/vnd.android.package-archive，但actions/upload-release-asset在某些情况下可能不正确识别APK类型，所以这里使用zip类型通常也能工作。你可以尝试改为application/vnd.android.package-archive试试看。
  build-X5:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'
    
    - name: Unzip X5.zip
      run: unzip X5.zip -d app/src/main

    - name: Build with Gradle
      run: |
        bash ./gradlew build --no-daemon

    - name: Get short SHA
      run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
      
    - uses: actions/upload-artifact@v4
      with:
          name: CCTV_Viewer_${{ env.SHORT_SHA }}-X5
          path: ./app/build/outputs/apk/debug/app-x5.apk
    - uses: actions/upload-artifact@v4
      with:
          name: CCTV_Viewer_${{ env.SHORT_SHA }}
          path: ./app/build/outputs/apk/debug/app-x5.apk
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 自动从GitHub获取的token
      with:
        tag_name: v1.0.${{ github.run_number }} # 使用运行号作为版本号
        release_name: Release v1.0.${{ github.run_number }}
        body: |
          Changes in this Release
          - First Change
          - Second Change
        draft: false
        prerelease: false
 
    - name: Upload Release APK
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # 上传URL从创建发布步骤获取
        asset_path: ./app/build/outputs/apk/debug/app-x5.apk # APK文件路径
        asset_name: app-x5.apk # 上传到GitHub的APK文件名
        asset_content_type: application/zip
 
